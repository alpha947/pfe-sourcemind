#Configuration standard de l'application sans profil
spring:
  application:
    name: detection_de_presence_du_courant
  profiles:
    active: ${ACTIVE_PROFILE:dev}
  jackson:
    default-property-inclusion: non_null
    serialization:
      fail-on-empty-beans: false
      close-closeable: true
      flush-after-write-value: true
      write-date-keys-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  datasource:
    url: jdbc:postgresql://${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DATABASE}
    username: ${POSTGRESQL_USERNAME}
    password: ${POSTGRESQL_PASSWORD}
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PosgreSQLInnoDBDialect
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        globally_quoted_identifiers: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false #ce parametre prend true ou  false pour rendre l'execution du sql dans la console tres joli
# Pour permettre la création de la base de données si elle n'existe pas
  sql:
    init:
      mode: never # cette configuration doit prendre l'un des parametres suivant (ALWAYS, EMBEDDED, NEVER)
      continue-on-error: false
#      schema-locations: classpath:/data/schema.sql
#      data-locations: classpath:/data/data.sql
  servlet:
    multipart:
      enabled: true
      max-file-size: 1000MB
      max-request-size: 1000MB
  mail:
    host: ${EMAIL_HOST}
    port: ${EMAIL_PORT}
    username: ${EMAIL_ID}
    password: ${EMAIL_PASSWORD}
    default-encoding: UTF-8
    properties:
      mail:
        mime:
          charset: UTF
        smtp:
          writetimeout: 10000
          connectiontimeout: 10000
          timeout: 10000
          auth: true
          starttls:
            enable: true
            required: true
    verify:
      host: ${VERIFY_EMAIL_HOST}
      #debut des configurations thymeleaf
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
    #fin des configurations thymeleaf
server:
  port: ${CONTAINER_PORT:8080}
  error:
    path: /user/error
    whitelabel:
      enabled: false

jwt:
  expiration: ${JWT_EXPIRATION}
  secret: ${JWT_SECRET}
#  configuration du banner
#  spring.banner.image.location=classpath:banner.gif
#  spring.banner.image.width=  //TODO
#  spring.banner.image.height= //TODO
#  spring.banner.image.margin= //TODO
#  spring.banner.image.invert= //TODO
#Configuration du serveur Twilio
# configuration twilio
twilio:
  accountSid: ACacf5cc8e252a9f6c05cef7063358468e
  authToken: 80de8fa7bd2c46d8eb344871a9614c50
twilio.phoneNumber: +14433907095
alpha:
  destination:
    phoneNumber: +224626929178